# Generated by Django 5.0.4 on 2024-05-14 13:34

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import documento.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('codigo', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'area',
            },
        ),
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'cargo',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'empresa',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ImportUsuarioXLSX',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('login', models.CharField(max_length=50)),
                ('regional', models.CharField(max_length=50)),
                ('unidade', models.CharField(max_length=50)),
                ('ativo', models.BooleanField(default=True)),
                ('senha', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='PasswordResetRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('token', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='RelatorioGerencial',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('titulo', models.CharField(max_length=255)),
                ('descricao', models.TextField()),
                ('data_criacao', models.DateField()),
                ('data_atualizacao', models.DateField()),
                ('arquivo', models.FileField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telefone', models.CharField(blank=True, max_length=15, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='documento_usuarios_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='documento_usuarios_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
                'permissions': (('add_empresa', 'Pode adicionar empresas'), ('view_empresa_list', 'Pode ver a lista de empresas'), ('add_regional', 'Pode adicionar regionais'), ('view_regional_list', 'Pode ver a lista de regionais'), ('add_unidade', 'Pode adicionar unidades'), ('view_unidade_list', 'Pode ver a lista de unidades'), ('access_tela_login', 'Pode acessar a tela de login'), ('access_dashboard', 'Pode acessar o dashboard'), ('access_dossie', 'Pode acessar o dossiê'), ('access_dados_pessoais', 'Pode acessar os dados pessoais'), ('access_relatorios', 'Pode acessar relatórios'), ('access_configuracao', 'Pode acessar configurações'), ('access_menu_dashboard', 'Pode acessar o menu do Dashboard'), ('access_menu_dossie', 'Pode acessar o menu do Dossiê'), ('access_menu_relatorios', 'Pode acessar o menu de Relatórios'), ('access_menu_configuracoes', 'Pode acessar o menu de Configurações')),
            },
        ),
        migrations.CreateModel(
            name='Colaborador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('matricula', models.CharField(max_length=20)),
                ('cpf', models.CharField(max_length=14)),
                ('modo_ponto', models.CharField(max_length=255)),
                ('admissao', models.DateField()),
                ('desligamento', models.DateField(blank=True, null=True)),
                ('email', models.CharField(max_length=255, null=True)),
                ('pcd', models.CharField(max_length=3)),
                ('cargo', models.ForeignKey(default=documento.models.Cargo.get_default_cargo_id, on_delete=django.db.models.deletion.CASCADE, to='documento.cargo')),
                ('empresa', models.ForeignKey(default=documento.models.Empresa.get_default_empresa_id, on_delete=django.db.models.deletion.CASCADE, to='documento.empresa')),
            ],
            options={
                'db_table': 'colaborador',
            },
        ),
        migrations.CreateModel(
            name='GrupoDocumento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('codigo', models.CharField(max_length=255)),
                ('area', models.ForeignKey(default=documento.models.Area.get_default_area_id, on_delete=django.db.models.deletion.CASCADE, to='documento.area')),
            ],
            options={
                'db_table': 'grupodocumento',
            },
        ),
        migrations.CreateModel(
            name='Regional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documento.empresa')),
            ],
            options={
                'db_table': 'regional',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Hyperlinkpdf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_upload', models.DateField()),
                ('caminho', models.CharField(max_length=255)),
                ('matricula', models.CharField(max_length=255)),
                ('cpf', models.CharField(max_length=255)),
                ('nome_arquivo', models.CharField(max_length=255)),
                ('dta_documento', models.DateField(null=True)),
                ('codigo_documento', models.CharField(max_length=255)),
                ('cargo', models.ForeignKey(default=documento.models.default_cargo_id, on_delete=django.db.models.deletion.CASCADE, to='documento.cargo')),
                ('colaborador', models.ForeignKey(default=documento.models.default_colaborador_id, on_delete=django.db.models.deletion.CASCADE, to='documento.colaborador')),
                ('empresa', models.ForeignKey(default=documento.models.default_empresa_id, on_delete=django.db.models.deletion.CASCADE, to='documento.empresa')),
                ('regional', models.ForeignKey(default=documento.models.default_regional_id, on_delete=django.db.models.deletion.CASCADE, to='documento.regional')),
            ],
            options={
                'db_table': 'hyperlinkdocpdf',
            },
        ),
        migrations.CreateModel(
            name='DomingosFeriados',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loja', models.CharField(max_length=255)),
                ('data_documento', models.CharField(blank=True, max_length=255, null=True)),
                ('nome_documento', models.CharField(max_length=255)),
                ('link_documento', models.CharField(max_length=255)),
                ('data_upload', models.DateField()),
                ('empresa', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='documento.empresa')),
                ('regional', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='documento.regional')),
            ],
            options={
                'db_table': 'domingosferiados',
            },
        ),
        migrations.AddField(
            model_name='colaborador',
            name='regional',
            field=models.ForeignKey(default=documento.models.Regional.get_default_regional_id, on_delete=django.db.models.deletion.CASCADE, to='documento.regional'),
        ),
        migrations.CreateModel(
            name='Situacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('cargo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documento.cargo')),
            ],
            options={
                'db_table': 'situacao',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='colaborador',
            name='status',
            field=models.ForeignKey(default=documento.models.Situacao.get_default_situacao_id, on_delete=django.db.models.deletion.CASCADE, to='documento.situacao'),
        ),
        migrations.CreateModel(
            name='TipoDocumento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=255)),
                ('nome', models.CharField(max_length=255)),
                ('pcd', models.CharField(default=False, max_length=255)),
                ('obrigatorio', models.BooleanField(default=False, null=True)),
                ('valor_legal', models.BooleanField(default=False)),
                ('verifica_assinatura', models.BooleanField(default=False)),
                ('auditoria', models.CharField(max_length=255, null=True)),
                ('validade', models.CharField(max_length=255)),
                ('tipo_validade', models.CharField(max_length=255)),
                ('exibe_relatorio', models.BooleanField(default=False)),
                ('lista_situacao', models.CharField(max_length=255)),
                ('prioridade', models.CharField(max_length=255, null=True)),
                ('grupo_documento', models.ForeignKey(default=documento.models.GrupoDocumento.get_default_grupodocumento_id, on_delete=django.db.models.deletion.CASCADE, to='documento.grupodocumento')),
                ('hiperlink_documento', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='documento.hyperlinkpdf')),
            ],
            options={
                'db_table': 'tipodocumento',
            },
        ),
        migrations.AddField(
            model_name='hyperlinkpdf',
            name='documento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documento.tipodocumento'),
        ),
        migrations.CreateModel(
            name='ColaboradorTipoDocumento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('colaborador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documento.colaborador')),
                ('tipo_documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documento.tipodocumento')),
            ],
            options={
                'db_table': 'colaborador_tipodocumento',
            },
        ),
        migrations.CreateModel(
            name='TipoDocumentoCargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cargo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documento.cargo')),
                ('tipo_documento', models.ForeignKey(db_column='tipodocumento_id', on_delete=django.db.models.deletion.CASCADE, to='documento.tipodocumento')),
            ],
            options={
                'db_table': 'tipodocumento_cargo',
            },
        ),
        migrations.CreateModel(
            name='Unidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('regional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documento.regional')),
            ],
            options={
                'db_table': 'unidade',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PendenteASO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricula', models.CharField(max_length=20)),
                ('cpf', models.CharField(max_length=14, null=True)),
                ('admissao', models.DateField(null=True)),
                ('desligamento', models.DateField(blank=True, null=True)),
                ('aso_admissional_existente', models.BooleanField(default=False)),
                ('aso_demissional_existente', models.BooleanField(default=False)),
                ('aso_periodico_existente', models.BooleanField(default=False)),
                ('cargo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='documento.cargo')),
                ('empresa', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='documento.empresa')),
                ('nome', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='documento.colaborador')),
                ('regional', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='documento.regional')),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='documento.situacao')),
                ('tipo_aso', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='documento.tipodocumento')),
                ('unidade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='documento.unidade')),
            ],
        ),
        migrations.AddField(
            model_name='hyperlinkpdf',
            name='unidade',
            field=models.ForeignKey(default=documento.models.default_unidade_id, on_delete=django.db.models.deletion.CASCADE, to='documento.unidade'),
        ),
        migrations.CreateModel(
            name='DocumentoVencido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricula', models.CharField(max_length=255)),
                ('cpf', models.CharField(max_length=255)),
                ('dta_documento', models.DateField(null=True)),
                ('precisa_renovar', models.BooleanField(default=False)),
                ('data_vencimento', models.DateField(blank=True, null=True)),
                ('cargo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='documento.cargo')),
                ('colaborador', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='documento.colaborador')),
                ('empresa', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='documento.empresa')),
                ('regional', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='documento.regional')),
                ('tipo_documento', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='documento.tipodocumento')),
                ('unidade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='documento.unidade')),
            ],
            options={
                'db_table': 'documentos_vencidos',
            },
        ),
        migrations.CreateModel(
            name='DocumentoPendente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricula', models.CharField(max_length=20)),
                ('cpf', models.CharField(max_length=14)),
                ('admissao', models.DateField()),
                ('desligamento', models.DateField(blank=True, null=True)),
                ('situacao', models.CharField(blank=True, max_length=255, null=True)),
                ('obrigatorio', models.BooleanField(default=False)),
                ('cargo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documento.cargo')),
                ('nome', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documento.colaborador')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documento.empresa')),
                ('regional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documento.regional')),
                ('tipo_documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documento.tipodocumento')),
                ('unidade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documento.unidade')),
            ],
            options={
                'db_table': 'relatoriodocpendente',
            },
        ),
        migrations.AddField(
            model_name='colaborador',
            name='unidade',
            field=models.ForeignKey(default=documento.models.Unidade.get_default_unidade_id, on_delete=django.db.models.deletion.CASCADE, to='documento.unidade'),
        ),
        migrations.CreateModel(
            name='CartaoPontoInexistente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(blank=True, null=True)),
                ('existente', models.BooleanField(default=False)),
                ('colaborador', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='documento.colaborador')),
                ('empresa', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='documento.empresa')),
                ('regional', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='documento.regional')),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='documento.situacao')),
                ('unidade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='documento.unidade')),
            ],
        ),
        migrations.AddField(
            model_name='cargo',
            name='unidade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documento.unidade'),
        ),
        migrations.CreateModel(
            name='AcessoUnidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pode_acessar', models.BooleanField(default=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('unidade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documento.unidade')),
            ],
        ),
        migrations.CreateModel(
            name='AcessoEmpresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pode_acessar', models.BooleanField(default=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documento.empresa')),
            ],
            options={
                'unique_together': {('usuario', 'empresa')},
            },
        ),
        migrations.AddConstraint(
            model_name='colaboradortipodocumento',
            constraint=models.UniqueConstraint(fields=('colaborador', 'tipo_documento'), name='unique_colaborador_tipodocumento'),
        ),
        migrations.AddConstraint(
            model_name='tipodocumentocargo',
            constraint=models.UniqueConstraint(fields=('cargo', 'tipo_documento'), name='unique_tipodocumento_cargo'),
        ),
        migrations.AlterUniqueTogether(
            name='acessounidade',
            unique_together={('usuario', 'unidade')},
        ),
    ]
